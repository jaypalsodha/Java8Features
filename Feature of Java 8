
										java 8 Features
------------------------------------------------------------------------------------------------

1. Lambda Expression:- 
	defination:- It is an anonymous function. 
		- nameless
		- without return type
		- without modifier

	benefits:- It is used to enable functional programming.

	let see how to write lambda expression:-

	suppose we have an method

	public void doSomething()
	{
		System.out.println("hello");
	}

	As per the defination lambda expression doesn't contains name, return type and modifier. 

	so just remove all these things from above method. 

	()
	{
		System.out.println("hello");	
	}

	to represent lambda expression they provide one special symbol called -> (arrow) is used.

	() ->
	{
		System.out.println("hello");	
	}

	here, curly braces is the body of an method.

	() ->{System.out.println("hello");}

	If method body contains only one line of code, then {} becomes optional.


	example 2:- 
	using java 7 :- 
	public void m1(int a, int b)
	{
		System.out.println(a+b);
	}

	using lambda expression. 

	(a,b)-> System.out.println(a+b);

	example 3:- 
	
	using java 7 
	public int squareIt(int n)
	{
		return n*n;
	}
	using lambda expression

	(int n)-> {return n*n;}
	Or
	(int n)-> n*n; //without brackets you don't need to specify return keyword 
	Or
	(n) -> n*n; // if only one parameter is there,then bracket is also not needed
	or
	n -> n*n;



	public void m1(String s)
	{
		return s.length();
	}

	using lambda expression
	
	s -> s.length();

